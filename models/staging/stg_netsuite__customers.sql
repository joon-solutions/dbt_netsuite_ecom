with source as (
    select * from {{ source('netsuite','customer') }}
),

renamed as (
    select
        --id
        id as customer_id,
        externalid as external_id,
        custentity_open_farm_customer_department as customer_department_id,
        parent as parent_id,
        entitystatus as entity_status_id,

        --customer infor
        companyname as company_name,
        altname as alternative_name,
        phone,
        entityid as entity_name,
        entitytitle as entity_title,
        fax,
        url as customer_url,

        --time
        dateclosed as closed_at,
        datecreated as created_at,
        lastmodifieddate as last_modified_date,
        lastorderdate as last_order_date,
        lastsaledate as last_sale_date,
        firstorderdate as first_order_date,
        firstsaledate as first_sale_date,

        --email
        email as email,
        emailpreference as email_preference,
        emailtransactions as email_transactions,

        --shipping
        shipcomplete = 'T' as is_shipcomplete,
        shippingcarrier as shippingcarrier,
        shippingitem as shippingitem,
        custentity_shipping_terms as shipping_terms,

        --default
        defaultallocationstrategy as default_allocation_strategy,
        defaultbillingaddress as default_billing_address_id,
        defaultshippingaddress as default_shipping_address_id,

        --consol
        consolbalancesearch as consol_balance_search,
        consoldaysoverduesearch as consol_days_over_dues_earch,
        consoloverduebalancesearch as consol_overdue_balance_search,
        consolunbilledorderssearch as consol_unbilled_orders_search,

        --boolean
        isautogeneratedrepresentingentity = 'T' as is_autog_enerated_representing_entity,
        isbudgetapproved = 'T' as has_budget_approved,
        isinactive = 'T' as is_inactive,
        isperson = 'T' as is_person,
        duplicate = 'T' as is_duplicate,
        faxtransactions = 'T' as is_fax_transactions,
        oncredithold = 'T' as is_on_credit_hold,
        printtransactions = 'T' as is_print_transactions,
        custentity_2663_customer_refund = 'T' as is_customer_refund,
        custentity_2663_direct_debit = 'T' as is_direct_debit,
        custentity_audit_certificate = 'T' as has_audit_certificate,
        custentity_naw_trans_need_approval = 'T' as is_naw_trans_need_approval,
        custentity_of_certificates = 'T' as has_certificates,
        custentity_of_letters_of_guarantee = 'T' as has_letters_of_guarantee,
        custentity_requires_deposit = 'T' as is_requires_deposit,

        --other
        custentity_hj_tc_default_asn as hj_tc_default_asn,
        custentity_payment_method as payment_method,
        alcoholrecipienttype as alcohol_recipient_type,
        balancesearch__de as balance_search__de,
        balancesearch__fl as balance_search__fl,
        unbilledorderssearch__de as unbilled_orders_search__de,
        unbilledorderssearch__fl as unbilled_orders_search__fl,

        contactlist as contact_list,
        creditholdoverride as credit_hold_override,
        creditlimit as credit_limit,
        cseg_channel as cseg_channel,
        currency as currency,
        cseg_geography as cseg_geography,

        {# overduebalancesearch as overdue_balance_search, #}
        pricelevel as price_level,
        probability as probability,
        receivablesaccount as receivables_account,
        representingsubsidiary as representing_subsidiary,
        resalenumber as resale_number,
        searchstage as search_stage,
        terms
        {# unbilledorderssearch as unbilled_orders_search #}

        --system
        --_sdc_batched_at,
        --_sdc_extracted_at,
        --_sdc_received_at,
        --_sdc_sequence,
        --_sdc_table_version,

    from source
)

select * from renamed
